apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: microservices
spec:
  ports:
    - port: 5014
      targetPort: 5014
  selector:
    app: order-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: microservices
spec:
  selector:
    matchLabels:
      app: order-service
  replicas: 1
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: pink27/order-service:latest
          ports:
            - containerPort: 5014
          env:
            - name: DATABASE_URL_PSQL
              value: "postgresql://admin:admin@postgres:5432/orders"
            - name: KAFKA_BROKER
              value: "kafka:9092"
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: microservices
spec:
  ports:
    - port: 5010
      targetPort: 5010
  selector:
    app: product-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: microservices
spec:
  selector:
    matchLabels:
      app: product-service
  replicas: 1
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
        - name: product-service
          image: pink27/product-service:latest
          ports:
            - containerPort: 5010
          resources: # ðŸš€ REQUIRED for HPA
            requests:
              cpu: "100m" # 100 millicores (0.1 CPU)
              memory: "256Mi"
            limits:
              cpu: "500m" # Max CPU allowed (0.5 CPU)
              memory: "512Mi"
          env:
            - name: KAFKA_BROKER
              value: "kafka:9092"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: product-service-hpa
  namespace: microservices
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: product-service
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50 # Scale when CPU exceeds 50% of request (100m)
---
apiVersion: v1
kind: Service
metadata:
  name: wishlist-service
  namespace: microservices
spec:
  ports:
    - port: 5011
      targetPort: 5011
  selector:
    app: wishlist-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wishlist-service
  namespace: microservices
spec:
  selector:
    matchLabels:
      app: wishlist-service
  replicas: 1
  template:
    metadata:
      labels:
        app: wishlist-service
    spec:
      containers:
        - name: wishlist-service
          image: pink27/wishlist-service:latest
          ports:
            - containerPort: 5011
          env:
            - name: KAFKA_BROKER
              value: "kafka:9092"
            - name: PRODUCT_SERVICE_URL
              value: "http://product-service:5010"
---
apiVersion: v1
kind: Service
metadata:
  name: ws-chat-service
  namespace: microservices
spec:
  ports:
    - port: 8081
      targetPort: 8081
  selector:
    app: ws-chat-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-chat-service
  namespace: microservices
spec:
  selector:
    matchLabels:
      app: ws-chat-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ws-chat-service
    spec:
      containers:
        - name: ws-chat-service
          image: pink27/ws-chat-service:latest
          ports:
            - containerPort: 8081
          env:
            - name: KAFKA_BROKER
              value: "kafka:9092"
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: microservices
spec:
  ports:
    - port: 8080
      targetPort: 8080  
  selector:
    app: notification-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: microservices
spec:
  selector:
    matchLabels:
      app: notification-service
  replicas: 1
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
        - name: notification-service
          image: pink27/notification-service:latest
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_BROKER
              value: "kafka:9092"
---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
  namespace: microservices
spec:
  ports:
    - port: 5012
      targetPort: 5012  
  selector:
    app: chat-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: microservices
spec:
  selector:
    matchLabels:
      app: chat-service
  replicas: 1
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      containers:
        - name: chat-service
          image: pink27/chat-service:latest
          ports:
            - containerPort: 5012
          env:
            - name: KAFKA_BROKER
              value: "kafka:9092"

