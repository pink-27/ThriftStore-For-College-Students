version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: orders
    ports:
      - "5432:5432"
    networks:
      - kafka-network

  order-service:
    image: pink27/order-service:latest
    container_name: order-service
    depends_on:
      - kafka
      - postgres
    ports:
      - "5014:5014"
    environment:
      DATABASE_URL_PSQL: "postgresql://admin:admin@postgres:5432/orders"
      KAFKA_BROKER: "kafka:9092"
    networks:
      - kafka-network

  product-service:
    image: pink27/product-service:latest
    container_name: product-service
    depends_on:
      - kafka
    ports:
      - "5010:5010"
    environment:
      KAFKA_BROKER: "kafka:9092"
    networks:
      - kafka-network

  wishlist-service:
    image: pink27/wishlist-service:latest
    container_name: wishlist-service
    depends_on:
      - kafka
      - product-service
    ports:
      - "5011:5011"
    environment:
      KAFKA_BROKER: "kafka:9092"
      PRODUCT_SERVICE_URL: "http://product-service:5010"
    networks:
      - kafka-network

  ws-chat-service:
    image: pink27/ws-chat-service:latest
    container_name: ws-chat-service
    depends_on:
      - kafka
    ports:
      # - "5013:5013"
      - "8081:8081"
    environment:
      KAFKA_BROKER: "kafka:9092"
    networks:
      - kafka-network
  notification-service:
    image: pink27/notification-service:latest
    container_name: notification-service
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKER: "kafka:9092"
    networks:
      - kafka-network

  chat-service:
    image: pink27/chat-service:latest
    container_name: chat-service
    depends_on:
      - kafka
      - ws-chat-service
    ports:
      - "5012:5012"
      # - "5015:5015"
    environment:
      KAFKA_BROKER: "kafka:9092"
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge


# docker-compose up --build -d


#add live updates, prometheus and grafan, loadbalancer, ai ml ops monitoring